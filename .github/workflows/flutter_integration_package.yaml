name: Flutter Package Workflow

on:
  workflow_call:
    inputs:
      analyze_directories:
        required: false
        type: string
        default: "lib test"
      concurrency:
        required: false
        type: number
        default: 4
      coverage_excludes:
        required: false
        type: string
        default: ""
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: ""
      min_coverage:
        required: false
        type: number
        default: 100
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      setup:
        required: false
        type: string
        default: ""
      test_optimization:
        required: false
        type: boolean
        default: true
      test_recursion:
        required: false
        type: boolean
        default: false
      working_directory:
        required: false
        type: string
        default: "."

jobs:
  build:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: [macOS,self-hosted]
    env:
      FIREBASE_EMULATORS_PATH: ${{ github.workspace }}/emulator-cache

    steps:
      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ${{ env.FIREBASE_EMULATORS_PATH }}
          key:
            ${{ runner.os }}-firebase-emulators-${{
            hashFiles('emulator-cache/**') }}
        continue-on-error: true

      - uses: actions/setup-node@v1
        with:
          node-version: '18'
          cache: 'npm'

      - run: npm install -g firebase-tools

      - uses: actions/checkout@v3

      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: 📦 Activate melos
        run: dart pub global activate melos

      - name: 📦 Initialize melos
        run: dart pub get
        working-directory: .

      - name: 📦 Melos - disable offline pub get
        run: yq -i '.command.bootstrap.runPubGetOffline = false' melos.yaml
        working-directory: .

      - name: 📦 Bootstrap
        run: melos bootstrap
        working-directory: .

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good --analytics false
          very_good packages get --recursive

      - name: ⚙️ Run Setup
        if: "${{inputs.setup != ''}}"
        run: ${{inputs.setup}}

      - name: ✨ Check Formatting
        run: dart format --set-exit-if-changed lib integration_test
#
#      - name: 🕵️ Analyze
#        run: flutter analyze ${{inputs.analyze_directories}}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - uses: futureware-tech/simulator-action@v2
        with:
          model: 'iPhone 14'

      - run: ls
      - run: pwd

      - run: firebase emulators:exec "cd ..; flutter test integration_test --coverage"
        working-directory: ${{inputs.working_directory}}/integration_test_firebase

#      - name: 🧪 Run Tests
#        run: very_good test integration_test --coverage --test-randomize-ordering-seed random

      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: ${{inputs.working_directory}}/coverage/lcov.info
          exclude: ${{inputs.coverage_excludes}}
          min_coverage: ${{inputs.min_coverage}}
